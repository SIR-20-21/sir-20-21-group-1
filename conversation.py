from social_interaction_cloud.abstract_connector import AbstractSICConnector
from social_interaction_cloud.action import ActionRunner
from social_interaction_cloud.basic_connector import BasicSICConnector, RobotPosture
from social_interaction_cloud.detection_result_pb2 import DetectionResult
from enum import Enum
import random

class ReturnType(Enum):
    MAX_ATTEMPTS = 0
    STOP = -1
    SUCCESS = 1
    WRONG_ANSWER = 2

class MOVEMENT_TYPE(Enum):
    GESTURE = 0
    POSTURE = 1
    MOTION = 2


class Motion:
    def __init__(self):
        self.mixing_movement=b'{"motion":{"LShoulderPitch":{"angles":[1430,1430,1430,1422,1289,946,509,405,344,337,336,337,353,371,396,397,374,374,374,374,374,396,396,393,390,379,364,364,364,374,393,390,390],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LShoulderRoll":{"angles":[204,181,172,173,173,152,23,-32,-34,-40,-57,-58,-35,14,58,64,15,-52,-80,-34,1,35,37,15,-23,-75,-112,-92,-55,-5,6,-9,-68],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RShoulderRoll":{"angles":[-201,-192,-189,-189,-190,-190,-192,-226,-365,-496,-290,38,81,-14,-338,-813,-850,-698,-181,110,11,-273,-736,-919,-838,-718,-459,-2,132,-34,-646,-956,-850],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LElbowYaw":{"angles":[-1186,-1184,-1184,-1180,-1180,-1155,-1078,-979,-925,-925,-924,-924,-925,-925,-925,-925,-925,-916,-913,-914,-920,-930,-930,-930,-930,-922,-911,-919,-925,-934,-937,-937,-933],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LWristYaw":{"angles":[115,115,115,175,451,584,623,871,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,874,874,874,874,874,874,874],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RWristYaw":{"angles":[77,77,77,28,-17,-25,-43,-124,-196,-364,-453,-519,-520,-531,-531,-519,-512,-528,-586,-601,-601,-601,-600,-592,-591,-591,-594,-600,-600,-601,-598,-592,-592],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LHand":{"angles":[296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LElbowRoll":{"angles":[-406,-396,-391,-437,-503,-543,-540,-531,-548,-552,-558,-520,-506,-492,-475,-526,-566,-586,-571,-545,-538,-534,-548,-586,-592,-601,-597,-560,-551,-543,-538,-581,-592],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RElbowRoll":{"angles":[411,408,407,403,403,405,431,469,535,583,641,710,1151,1361,1398,1325,1198,874,812,1068,1444,1545,1517,1408,1022,808,719,766,1255,1485,1533,1273,759],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RElbowYaw":{"angles":[1180,1180,1180,1180,1180,1164,1152,1137,1135,1084,657,574,262,172,209,239,311,477,423,184,86,90,126,166,327,426,457,406,244,202,232,310,500],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RHand":{"angles":[295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RShoulderPitch":{"angles":[1433,1433,1433,1434,1436,1437,1437,1436,1333,928,580,488,528,540,545,546,479,445,336,353,379,417,450,439,417,391,310,313,368,428,468,465,411],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.face_wash=b'{"motion":{"LShoulderPitch":{"angles":[1391,1391,1391,1374,1312,1235,1138,1112,1028,534,359,253,147,-2,17,236,265,198,-12,-157,-124,245,247,18,-172,-157,-45,213,159,32,-18,-18,37],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LShoulderRoll":{"angles":[178,146,127,106,54,11,-34,-61,-78,-183,-219,-245,-267,-235,-226,-167,-138,-199,-261,-235,-244,-169,-147,-261,-242,-241,-221,-170,-198,-219,-215,-226,-227],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RShoulderRoll":{"angles":[-169,-140,-124,-89,-26,18,58,118,248,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,307,278,314,314,314,314,314],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LElbowYaw":{"angles":[-1184,-1186,-1186,-1186,-1186,-1186,-1186,-1121,-1085,-1085,-1085,-1109,-1427,-1563,-1450,-973,-970,-1049,-1493,-1615,-1519,-917,-927,-1330,-1526,-1526,-1284,-1068,-1095,-1220,-1368,-1405,-1284],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LWristYaw":{"angles":[98,98,98,98,98,66,18,-127,-199,-321,-382,-397,-526,-664,-663,-445,-338,-407,-540,-606,-528,-275,-268,-361,-503,-508,-380,-250,-272,-480,-624,-634,-232],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RWristYaw":{"angles":[83,83,83,83,83,104,273,525,716,799,805,805,962,1112,856,523,310,594,945,1068,558,273,256,630,976,907,411,271,379,873,1060,999,509],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LHand":{"angles":[296,296,296,296,320,360,367,389,389,389,388,388,388,389,388,388,389,388,388,388,388,388,388,389,389,388,388,388,388,388,388,388,388],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LElbowRoll":{"angles":[-437,-448,-456,-497,-584,-706,-825,-1448,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RElbowRoll":{"angles":[439,440,440,491,612,1040,1160,1284,1396,1500,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RElbowYaw":{"angles":[1181,1181,1181,1178,1177,1180,1178,1177,1190,1190,1193,1198,1318,1440,1420,1308,1238,1242,1335,1450,1428,1324,1279,1299,1566,1693,1212,1015,1068,1341,1598,1595,1499],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RHand":{"angles":[296,296,296,307,394,408,431,432,432,432,432,431,431,431,431,431,431,431,431,431,431,432,432,431,431,431,431,431,431,431,431,431,431],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RShoulderPitch":{"angles":[1407,1407,1407,1402,1350,1348,1278,1120,776,586,347,224,201,150,150,160,227,183,115,23,26,135,242,149,9,-37,140,354,305,164,55,46,71],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.walking=b'{"motion":{"LShoulderPitch":{"angles":[1434,1434,1434,1434,1384,1302,1117,926,917,1178,1535,1727,1896,1862,1749,1477,1104,1092,1457,1822,2086,2086,1756,1367,1068,991,1144,1578,1993,2086,1821,1368,1066],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LShoulderRoll":{"angles":[202,183,169,158,161,164,184,202,201,216,219,229,241,255,273,275,225,225,202,190,204,189,172,153,173,216,150,144,167,176,183,143,143],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RShoulderRoll":{"angles":[-201,-180,-167,-166,-184,-203,-227,-224,-229,-238,-224,-129,-118,-137,-242,-242,-250,-235,-212,-146,-63,-63,-129,-204,-199,-183,-190,-126,-91,-92,-144,-192,-155],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LElbowYaw":{"angles":[-1184,-1184,-1183,-1183,-1201,-1240,-1295,-1338,-1344,-1345,-1348,-1375,-1417,-1539,-1586,-1592,-1592,-1582,-1579,-1579,-1595,-1603,-1606,-1606,-1606,-1606,-1605,-1605,-1617,-1677,-1678,-1661,-1646],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LWristYaw":{"angles":[118,118,118,118,118,118,118,110,110,110,112,112,112,113,113,113,112,112,113,115,118,129,127,129,129,129,129,129,130,141,141,146,146],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RWristYaw":{"angles":[77,77,77,75,72,72,71,72,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,72,74,74,74,72,72,72,72,77,80],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LHand":{"angles":[296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LElbowRoll":{"angles":[-403,-387,-371,-400,-434,-445,-491,-491,-440,-414,-443,-413,-383,-620,-957,-986,-942,-891,-854,-854,-847,-893,-873,-841,-813,-798,-693,-684,-683,-755,-801,-750,-739],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RElbowRoll":{"angles":[405,400,393,376,354,325,311,356,453,534,595,598,644,640,680,646,684,741,779,785,785,795,799,825,830,822,927,922,924,896,873,908,888],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RElbowYaw":{"angles":[1181,1181,1181,1181,1181,1181,1187,1223,1289,1318,1347,1387,1424,1430,1427,1430,1428,1436,1457,1460,1470,1493,1488,1488,1502,1505,1514,1522,1539,1555,1557,1572,1580],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RHand":{"angles":[295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RShoulderPitch":{"angles":[1428,1430,1430,1465,1536,1644,1822,1907,1887,1695,1499,1224,1147,1213,1592,1798,2049,2080,1729,1454,1195,1147,1427,1850,2086,2086,1881,1462,1170,1108,1402,1821,2086],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.right_left = b'{"motion":{"LShoulderPitch":{"angles":[1437,1436,1436,1437,1408,1322,1290,1249,879,663,288,212,193,167,118,106,104,106,104,104,104,106,104,104,106,106,104,104,104,104,104,104,104],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LShoulderRoll":{"angles":[204,175,149,118,100,35,18,9,-129,-153,-157,-155,-152,-153,-157,-155,-152,-152,-149,-149,-144,-146,-144,-143,-141,-141,-141,-141,-141,-140,-137,-137,-135],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LHand":{"angles":[296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LElbowYaw":{"angles":[-1183,-1183,-1184,-1183,-1184,-1184,-1183,-1170,-1169,-1170,-1227,-1310,-1348,-1358,-1367,-1370,-1379,-1394,-1402,-1402,-1402,-1402,-1402,-1404,-1404,-1404,-1404,-1404,-1404,-1404,-1404,-1404,-1404],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LWristYaw":{"angles":[107,107,107,107,83,-89,-281,-410,-614,-759,-1039,-1160,-1180,-1212,-1255,-1256,-1256,-1256,-1256,-1256,-1261,-1261,-1267,-1276,-1279,-1279,-1279,-1279,-1279,-1279,-1279,-1279,-1279],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RShoulderRoll":{"angles":[-203,-175,-150,-112,-84,-77,-81,-81,-74,-75,-78,-78,-71,-57,-48,-41,-38,-20,-11,-12,52,86,141,147,152,152,152,152,155,166,166,163,163],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RWristYaw":{"angles":[77,77,75,75,75,77,77,77,75,77,77,77,77,77,77,77,100,169,331,678,974,1295,1422,1554,1595,1595,1595,1597,1606,1608,1608,1608,1608],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RShoulderPitch":{"angles":[1445,1445,1445,1447,1447,1447,1447,1447,1447,1447,1447,1445,1445,1447,1447,1447,1381,1263,1178,1160,881,557,334,114,84,84,84,84,86,84,86,86,86],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RElbowRoll":{"angles":[405,400,394,384,384,379,379,379,379,380,376,376,376,376,376,394,457,560,870,1536,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545,1545],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RElbowYaw":{"angles":[1181,1181,1181,1180,1181,1180,1180,1180,1180,1180,1180,1180,1180,1181,1181,1180,1177,1177,1177,1178,1187,1196,1216,1270,1287,1289,1287,1287,1287,1287,1287,1287,1289],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RHand":{"angles":[296,295,295,295,296,295,296,296,295,295,295,295,296,296,296,296,295,295,295,295,295,295,295,296,295,295,295,295,295,295,295,295,295],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LElbowRoll":{"angles":[-403,-387,-371,-360,-422,-549,-1112,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545,-1545],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.backhand_left = b'{"motion":{"LShoulderPitch":{"angles":[1447,1447,1447,1447,1447,1447,1362,1267,1236,1212,1031,813,563,270,143,40,-31,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-61,-60,-60,-60],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LShoulderRoll":{"angles":[202,173,146,126,107,78,38,-23,-89,-114,-137,-193,-235,-175,-126,-91,-38,-12,11,18,21,21,21,21,21,23,23,25,25,25,25,26,26],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LHand":{"angles":[296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LElbowYaw":{"angles":[-1183,-1183,-1183,-1183,-1183,-1180,-1178,-1180,-1178,-1178,-1178,-1178,-1186,-1238,-1351,-1459,-1525,-1531,-1531,-1531,-1531,-1531,-1531,-1531,-1531,-1533,-1531,-1531,-1531,-1531,-1531,-1531,-1531],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LWristYaw":{"angles":[117,117,117,117,115,118,120,28,-124,-448,-756,-913,-1075,-1195,-1246,-1246,-1252,-1258,-1259,-1259,-1259,-1259,-1259,-1261,-1259,-1259,-1259,-1259,-1259,-1259,-1259,-1259,-1259],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"LElbowRoll":{"angles":[-402,-388,-373,-357,-342,-388,-460,-561,-945,-1154,-1256,-1328,-1428,-1525,-1535,-1535,-1535,-1535,-1535,-1535,-1535,-1535,-1535,-1534,-1531,-1531,-1531,-1531,-1531,-1531,-1531,-1529,-1529],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.backhand_right = b'{"motion":{"RShoulderRoll":{"angles":[-198,-173,-146,-106,-20,64,206,270,267,287,288,287,276,244,232,229,229,232,230,230,230,230,230,230,230,232,230,230,230,229,227,227,227,227],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660]},"RWristYaw":{"angles":[75,75,75,75,113,278,551,610,808,1135,1336,1348,1356,1333,1327,1304,1302,1302,1302,1304,1304,1304,1304,1304,1305,1305,1305,1305,1305,1305,1305,1307,1307,1305],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660]},"RElbowRoll":{"angles":[405,399,391,385,483,565,627,719,1105,1508,1509,1508,1509,1511,1513,1503,1468,1422,1404,1405,1410,1411,1411,1413,1413,1416,1433,1433,1433,1433,1433,1433,1433,1433],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660]},"RElbowYaw":{"angles":[1183,1183,1181,1181,1173,1173,1175,1183,1302,1574,1572,1571,1571,1569,1583,1598,1620,1621,1621,1620,1620,1620,1620,1621,1624,1626,1628,1628,1628,1628,1628,1628,1628,1628],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660]},"RHand":{"angles":[295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660]},"RShoulderPitch":{"angles":[1431,1431,1431,1434,1322,1184,928,766,670,620,517,371,253,190,37,-130,-258,-290,-298,-301,-301,-301,-301,-301,-301,-301,-299,-299,-299,-299,-299,-299,-299,-299],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.knock_knock = b'{"motion":{"RShoulderRoll":{"angles":[-199,-175,-153,-170,-209,-270,-370,-479,-578,-646,-709,-709,-689,-683,-692,-652,-612,-666,-707,-716,-652,-654,-710,-710,-709,-686,-592,-515,-499,-451,-388,-371,-333],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RWristYaw":{"angles":[77,77,77,77,77,57,11,-143,-295,-637,-729,-735,-755,-755,-753,-733,-703,-703,-706,-709,-634,-629,-637,-637,-637,-631,-629,-608,-608,-608,-608,-608,-608],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RElbowRoll":{"angles":[405,400,396,393,393,394,396,403,460,532,595,686,779,851,759,293,35,782,1442,888,101,617,1399,1370,1312,1261,1204,1137,1002,945,913,856,836],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RElbowYaw":{"angles":[1180,1180,1180,1180,1175,1158,1103,1101,1095,1092,1092,1092,1089,1089,1084,965,882,899,1037,1009,834,827,957,959,959,959,960,959,959,959,959,959,959],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RHand":{"angles":[294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]},"RShoulderPitch":{"angles":[1427,1428,1428,1428,1414,1375,1328,1233,1114,805,497,342,-1,-41,0,-12,-15,-8,-8,14,5,-11,2,28,164,687,1184,1359,1445,1493,1494,1543,1546],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.movement = b'{"motion":{"LShoulderPitch":{"angles":[1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1439,1385,1308,1177,950,486,281,279,258,252,253,265,353,482,624,980,1425,1526,1545,1546,1546,1546,1545],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LShoulderRoll":{"angles":[198,184,176,172,169,161,159,152,144,132,127,101,95,58,20,-20,-45,-38,-60,-68,-69,-68,-69,-69,-69,-68,-66,-63,6,31,17,14,14,14,12],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderRoll":{"angles":[-193,-169,-152,-132,-114,-100,-91,-81,-75,-69,-63,-48,-49,-46,-49,-48,-35,-38,-38,-37,-38,-37,-37,-38,-40,-40,-40,-40,-37,-28,-60,-58,-58,-60,-60],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowYaw":{"angles":[-1178,-1177,-1178,-1178,-1177,-1177,-1178,-1178,-1178,-1177,-1178,-1177,-1175,-1174,-1174,-1174,-1174,-1174,-1174,-1174,-1174,-1174,-1174,-1174,-1175,-1175,-1175,-1175,-1175,-1178,-1178,-1178,-1178,-1178,-1178],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LWristYaw":{"angles":[113,113,113,113,113,113,113,113,113,113,113,113,117,118,120,120,118,118,117,118,118,118,117,115,115,115,115,115,115,115,115,115,115,115,115],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RWristYaw":{"angles":[298,298,298,298,298,298,298,298,298,298,298,296,291,291,290,290,290,290,290,290,290,290,290,290,290,288,288,285,287,290,293,293,293,293,293],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LHand":{"angles":[310,312,314,317,321,326,337,344,350,351,337,322,308,293,279,266,260,273,286,300,301,303,305,307,308,311,313,316,319,323,332,340,347,294,345],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowRoll":{"angles":[-439,-425,-411,-394,-379,-362,-348,-334,-325,-325,-325,-331,-376,-429,-508,-609,-687,-689,-699,-726,-747,-762,-778,-775,-719,-699,-667,-650,-627,-598,-563,-545,-538,-534,-532],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowRoll":{"angles":[425,414,407,394,382,368,357,347,336,327,321,338,370,425,500,545,584,641,700,741,775,802,827,836,816,830,825,822,796,752,696,680,673,672,669],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowYaw":{"angles":[1207,1207,1207,1207,1207,1206,1207,1207,1207,1207,1207,1207,1213,1213,1213,1213,1213,1213,1213,1213,1213,1213,1213,1213,1212,1212,1212,1209,1209,1207,1207,1207,1207,1207,1207],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RHand":{"angles":[337,345,352,360,367,373,373,373,373,365,356,345,336,326,317,308,304,303,301,300,305,312,319,326,333,341,348,356,363,371,373,373,373,302,361],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderPitch":{"angles":[1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1405,1332,1221,963,680,595,469,348,272,210,199,213,279,365,473,793,1263,1566,1632,1632,1632,1634,1634],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.crossing_arms = b'{"motion":{"LShoulderPitch":{"angles":[1480,1480,1480,1482,1480,1482,1480,1482,1482,1480,1480,1175,722,667,626,555,522,514,512,514,494,482,719,1147,1315,1404,1410,1410,1410,1410,1410,1410,1410,1410,1410],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LShoulderRoll":{"angles":[199,179,169,159,150,140,130,120,115,110,112,-107,-314,-314,-314,-314,-314,-314,-314,-314,-311,-149,230,429,258,87,86,86,87,86,86,86,86,86,86],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderRoll":{"angles":[-199,-167,-143,-118,-101,-86,-74,-63,-55,-43,-31,21,219,314,314,314,314,314,314,314,301,-120,-315,-361,-262,-180,-130,-121,-118,-117,-115,-114,-114,-112,-112],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowYaw":{"angles":[-1189,-1189,-1187,-1189,-1187,-1189,-1187,-1189,-1189,-1189,-1189,-1183,-1180,-983,-525,-385,-341,-304,-304,-304,-308,-319,-319,-319,-318,-316,-318,-318,-318,-318,-318,-318,-318,-318,-318],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LWristYaw":{"angles":[113,113,113,113,113,113,113,113,113,113,113,94,81,80,113,117,141,120,120,118,118,117,117,117,117,152,156,155,155,155,155,155,155,155,155],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RWristYaw":{"angles":[676,676,676,676,676,676,676,676,676,676,676,673,667,813,815,833,992,1017,1017,1020,950,933,933,885,880,879,880,880,880,879,879,879,880,880,880],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LHand":{"angles":[303,305,307,309,311,314,316,320,323,334,341,348,353,342,328,313,299,284,270,257,268,281,294,300,302,304,306,308,310,312,315,317,321,326,337],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowRoll":{"angles":[-411,-397,-385,-370,-356,-344,-333,-324,-324,-317,-308,-437,-503,-1011,-1387,-1387,-1382,-1376,-1382,-1382,-1414,-1327,-1264,-1131,-193,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowRoll":{"angles":[407,399,391,380,371,361,353,344,334,330,334,433,463,384,500,982,985,971,971,971,962,939,887,772,35,35,35,35,35,35,35,35,35,35,35],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowYaw":{"angles":[1219,1219,1219,1219,1219,1219,1219,1219,1219,1219,1221,1213,1147,606,552,517,499,472,471,471,468,468,459,420,210,210,210,212,212,212,212,212,212,212,212],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RHand":{"angles":[312,320,327,335,342,350,357,364,371,373,373,373,369,359,350,339,330,320,311,305,303,302,300,301,308,315,323,330,338,345,353,360,368,373,373],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderPitch":{"angles":[1477,1477,1477,1477,1477,1477,1477,1477,1477,1477,1477,1364,1177,1028,1023,985,986,986,986,986,982,976,1025,1286,1376,1428,1431,1431,1431,1431,1431,1431,1431,1431,1431],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.left_arm_highfive = b'{"motion":{"LShoulderPitch":{"angles":[1447,1447,1447,1447,1447,1413,1353,1235,977,471,370,261,-87,-192,-322,-456,-502,-560,-598,-631,-640,-643,-646,-647,-652,-654,-652,-654,-652,-654,-652,-654,-652,-652,-652],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LShoulderRoll":{"angles":[199,181,172,169,172,253,317,400,537,643,684,706,727,745,759,758,758,756,753,753,753,753,755,753,753,753,753,752,752,750,742,738,736,735,730],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderRoll":{"angles":[-192,-166,-146,-126,-109,-97,-87,-81,-74,-64,-58,-54,-49,-40,-37,-32,-29,-26,-25,-23,-22,-20,-20,-18,-18,-18,-18,-18,-17,-17,-17,-17,-17,-17,-17],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowYaw":{"angles":[-1178,-1178,-1177,-1178,-1177,-1178,-1180,-1180,-1181,-1181,-1181,-1183,-1181,-1181,-1181,-1181,-1183,-1181,-1181,-1181,-1181,-1181,-1181,-1181,-1181,-1181,-1181,-1181,-1181,-1181,-1181,-1181,-1181,-1181,-1181],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LWristYaw":{"angles":[115,115,115,115,115,117,117,118,118,129,235,399,522,523,525,541,620,638,640,640,640,640,640,640,640,640,640,640,640,638,638,638,640,638,638],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RWristYaw":{"angles":[865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LHand":{"angles":[310,312,314,317,321,326,337,343,350,352,337,324,308,295,279,264,260,274,286,300,301,847,304,306,308,311,313,316,318,322,330,340,346,352,346],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowRoll":{"angles":[-442,-425,-410,-393,-376,-411,-437,-486,-552,-555,-607,-664,-709,-756,-830,-930,-974,-1017,-1034,-1032,-1028,-1028,-1029,-1029,-1031,-1031,-1031,-1031,-1031,-1031,-1031,-1031,-1031,-1028,-1026],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowRoll":{"angles":[425,416,410,399,387,373,361,350,338,325,318,307,296,288,281,275,270,264,259,255,252,249,247,244,242,241,239,238,235,233,232,230,230,229,229],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowYaw":{"angles":[1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RHand":{"angles":[337,345,352,360,367,373,373,373,373,366,356,347,336,327,317,306,304,303,301,300,304,302,319,326,333,340,348,355,362,370,373,373,373,371,362],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderPitch":{"angles":[1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.right_arm_highfive = b'{"motion":{"LShoulderPitch":{"angles":[1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445,1445],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LShoulderRoll":{"angles":[199,184,173,167,163,155,147,140,132,127,118,115,112,109,104,103,97,95,94,92,92,92,92,92,90,92,92,90,90,90,92,90,90,90,92],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderRoll":{"angles":[-193,-170,-150,-130,-109,-98,-86,-71,-71,-186,-390,-680,-910,-896,-831,-830,-824,-833,-833,-844,-844,-830,-833,-831,-838,-838,-839,-838,-836,-835,-835,-836,-838,-838,-838],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowYaw":{"angles":[-1178,-1178,-1177,-1178,-1178,-1178,-1178,-1178,-1178,-1177,-1178,-1178,-1178,-1177,-1178,-1178,-1178,-1178,-1177,-1177,-1177,-1178,-1178,-1177,-1178,-1178,-1178,-1178,-1178,-1178,-1177,-1177,-1177,-1177,-1178],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LWristYaw":{"angles":[115,113,113,113,115,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,115,113,113,113,113,113,113,113,113,113],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RWristYaw":{"angles":[865,865,865,865,865,865,865,865,865,850,741,502,117,-224,-440,-465,-476,-477,-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,-479],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LHand":{"angles":[310,312,315,317,321,326,337,344,350,351,335,322,307,293,278,264,262,274,294,300,301,303,304,307,309,311,313,316,319,294,333,340,347,353,343],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowRoll":{"angles":[-440,-425,-406,-393,-374,-360,-345,-331,-324,-319,-307,-291,-279,-271,-259,-245,-232,-224,-224,-224,-224,-224,-224,-224,-224,-222,-218,-212,-206,-199,-193,-192,-190,-190,-189],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowRoll":{"angles":[423,414,407,397,385,373,357,353,353,373,374,399,446,509,627,756,1189,1229,1249,1252,1253,1267,1269,1282,1286,1286,1284,1286,1284,1286,1286,1284,1284,1286,1286],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowYaw":{"angles":[1207,1207,1207,1207,1207,1207,1207,1207,1207,1215,1215,1215,1215,1213,1213,1212,1157,1147,1152,1166,1186,1212,1223,1229,1244,1250,1261,1262,1262,1262,1262,1262,1262,1262,1262],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RHand":{"angles":[337,345,353,360,368,373,373,373,373,365,355,345,335,326,316,306,304,303,737,300,304,312,319,326,334,341,348,356,364,756,373,373,373,370,360],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderPitch":{"angles":[1436,1437,1436,1437,1437,1437,1437,1437,1437,1399,1295,1062,506,-18,-287,-382,-406,-400,-399,-403,-408,-410,-410,-408,-408,-408,-408,-408,-408,-408,-408,-408,-408,-408,-408],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.big_gesture = b'{"motion":{"LShoulderPitch":{"angles":[1448,1448,1448,1448,1440,1218,1178,1152,999,429,-104,-446,-561,-580,-575,-563,-511,-387,456,709,925,1040,1149,1244,1244,1242,1242,1242,1242,1242,1244,1244,1242,1244,1242],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LShoulderRoll":{"angles":[195,184,175,166,28,-221,-189,-190,-241,-236,-100,341,831,1072,1092,1109,1134,1134,816,477,232,-64,-222,-273,-249,-222,-221,-222,-222,-222,-222,-222,-221,-222,-222],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderRoll":{"angles":[-186,-163,-118,-87,202,314,314,314,314,314,219,-184,-621,-861,-856,-861,-858,-810,-509,-365,-244,120,287,230,198,196,196,196,196,196,196,196,196,196,196],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowYaw":{"angles":[-1177,-1177,-1177,-1178,-1172,-1172,-1193,-1197,-1201,-1224,-1236,-1247,-1247,-1244,-1243,-1247,-1246,-1246,-1243,-1244,-1246,-1244,-1247,-1247,-1247,-1246,-1247,-1246,-1247,-1247,-1247,-1246,-1247,-1247,-1247],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LWristYaw":{"angles":[115,115,115,117,121,126,-49,-308,-368,-502,-726,-1078,-1258,-1154,-709,-492,-486,-482,-554,-190,-8,77,109,113,113,113,113,113,113,113,113,113,113,113,113],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RWristYaw":{"angles":[356,356,356,356,350,390,442,577,635,673,920,1034,1132,1166,1098,1097,1100,1115,1126,996,853,848,709,623,624,623,623,623,623,623,623,623,623,623,623],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LHand":{"angles":[311,313,316,319,323,331,340,346,353,346,330,317,306,288,273,259,306,279,292,300,306,303,306,307,310,312,314,317,321,325,306,343,349,353,339],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowRoll":{"angles":[-440,-425,-408,-394,-494,-526,-853,-1517,-1545,-1545,-1520,-1457,-1316,-807,-281,-78,-35,-35,-83,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowRoll":{"angles":[423,413,408,405,477,561,838,1516,1545,1539,1517,1468,1356,974,581,489,385,328,324,308,305,299,268,230,204,201,196,195,192,190,189,189,189,189,187],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowYaw":{"angles":[1207,1207,1207,1207,1212,1200,1201,1163,1117,1138,1173,1221,1227,1227,1187,1178,1178,1180,1183,1170,1161,1163,1161,1161,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164,1164],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RHand":{"angles":[341,348,355,362,370,373,373,373,371,362,351,342,303,322,312,305,303,302,300,300,303,314,303,329,337,344,352,359,366,373,303,373,373,367,357],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderPitch":{"angles":[1439,1439,1445,1445,1396,1256,1180,1178,993,364,-126,-307,-333,-331,-302,-201,-86,348,808,985,1092,1192,1276,1313,1330,1330,1330,1330,1330,1330,1330,1330,1330,1330,1330],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.left_arm_fist = b'{"motion":{"LShoulderPitch":{"angles":[1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1402,1322,1172,637,492,399,281,92,18,18,18,18,18,18,18,17,17,18,17,17,17,17,17,17,17],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]},"LShoulderRoll":{"angles":[195,178,166,156,146,136,129,121,118,113,109,110,109,112,115,78,80,80,80,54,31,6,-8,-9,-12,-11,-14,-14,-12,-12,-12,-12,-12,-12,-15,-15],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]},"RShoulderRoll":{"angles":[-187,-164,-146,-126,-110,-97,-87,-80,-71,-64,-58,-52,-49,-45,-38,-31,-29,-29,-29,-22,-20,-20,-18,-18,-18,-18,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]},"LElbowYaw":{"angles":[-1178,-1178,-1178,-1178,-1178,-1178,-1178,-1178,-1177,-1178,-1177,-1172,-1174,-1172,-1172,-1170,-1161,-1147,-1094,-1074,-1074,-1074,-1074,-1074,-1074,-1074,-1074,-1074,-1074,-1074,-1074,-1074,-1074,-1074,-1074,-1074],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]},"LWristYaw":{"angles":[118,118,118,118,118,118,120,118,118,118,118,166,632,1015,1028,1106,1206,1262,1285,1287,1285,1285,1285,1285,1262,1241,1230,1229,1223,1219,1216,1215,1213,1213,1212,1212],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]},"RWristYaw":{"angles":[367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]},"LHand":{"angles":[310,313,315,318,322,328,338,345,352,347,332,318,303,290,274,261,265,277,291,300,301,303,305,307,309,311,314,317,320,324,334,294,348,354,341,328],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]},"LElbowRoll":{"angles":[-439,-428,-416,-402,-394,-388,-380,-376,-376,-376,-377,-423,-439,-479,-472,-431,-377,-317,-248,-150,-92,-63,-57,-52,-52,-54,-60,-63,-63,-63,-63,-61,-63,-63,-61,-63],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]},"RElbowRoll":{"angles":[422,413,408,399,390,377,364,351,341,330,321,313,304,298,290,285,276,272,264,261,259,256,255,252,249,245,242,239,235,232,227,224,221,221,219,218],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]},"RElbowYaw":{"angles":[1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207,1207],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]},"RHand":{"angles":[340,347,354,362,368,373,373,373,372,363,352,343,333,324,313,306,304,302,300,300,306,313,320,328,335,343,350,358,365,373,373,302,373,369,358,349],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]},"RShoulderPitch":{"angles":[1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1437,1439,1437,1437,1439,1437,1437,1437,1437,1437,1437],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680,700]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'
        self.right_arm_fist = b'{"motion":{"LShoulderPitch":{"angles":[1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447,1447],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LShoulderRoll":{"angles":[184,173,164,156,147,136,129,123,115,110,107,106,101,100,98,98,98,97,94,94,94,94,92,90,89,89,87,86,84,84,84,84,84,84,84],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderRoll":{"angles":[-172,-158,-150,-146,-147,-192,-290,-397,-376,-357,-339,-325,-324,-310,-305,-298,-288,-296,-313,-315,-315,-315,-315,-315,-315,-315,-315,-315,-315,-315,-313,-313,-313,-308,-310],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowYaw":{"angles":[-1177,-1178,-1178,-1177,-1178,-1178,-1178,-1177,-1177,-1178,-1177,-1178,-1178,-1177,-1178,-1177,-1178,-1177,-1177,-1177,-1178,-1177,-1177,-1177,-1177,-1178,-1178,-1178,-1177,-1177,-1177,-1177,-1177,-1177,-1178],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LWristYaw":{"angles":[113,115,113,113,113,113,113,113,113,113,115,113,113,113,113,113,113,115,115,113,113,115,113,113,115,115,113,113,113,113,113,113,113,115,113],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RWristYaw":{"angles":[367,367,367,367,350,265,204,152,64,-75,-153,-166,-175,-175,-175,-175,-175,-166,-164,-164,-164,-164,-164,-164,-164,-166,-164,-164,-164,-164,-164,-164,-164,-164,-164],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LHand":{"angles":[312,314,317,321,326,337,344,350,351,337,322,308,293,279,264,260,274,286,300,301,303,304,306,308,311,313,316,319,322,332,340,347,352,346,331],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"LElbowRoll":{"angles":[-429,-414,-396,-379,-362,-350,-333,-324,-313,-299,-285,-275,-265,-255,-247,-242,-241,-241,-242,-242,-241,-241,-241,-241,-241,-238,-236,-232,-229,-224,-221,-219,-219,-219,-218],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowRoll":{"angles":[414,410,403,399,426,465,486,473,477,492,491,460,442,426,419,417,416,391,354,347,347,345,345,342,341,341,338,330,324,321,321,321,321,321,321],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RElbowYaw":{"angles":[1206,1206,1206,1206,1209,1155,1055,612,176,141,120,110,11,-14,-15,-15,-15,-6,25,32,32,32,32,32,32,32,32,32,32,32,32,31,32,32,31],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RHand":{"angles":[345,352,360,367,373,373,373,373,365,356,345,336,326,317,306,304,303,301,300,304,312,319,326,333,340,348,355,363,370,373,373,373,371,362,352],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]},"RShoulderPitch":{"angles":[1439,1439,1437,1439,1399,1275,1092,678,295,192,57,-37,-72,-63,-52,-52,-51,-44,-44,-44,-44,-44,-44,-44,-44,-44,-35,-21,-21,-21,-21,-21,-20,-21,-20],"times":[0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620,640,660,680]}},"precision_factor_angles":1000,"precision_factor_times":100,"robot":"nao"}'


class Conversation:
    """
    Represents a conversation between the robot and a human including a model of the user. 
    Basic elements of a conversation are implemented such as telling a story or asking a question and waiting for an answer.
    """

    def __init__(self, sic: AbstractSICConnector, robot_present: bool = False, speech_speed : int = 85):
        """
        :param sic: Connector implementing the interface to control the robot (AbstractSICConnector)
        :param robot_present: Indicating whether a real robot is used or only emulated on a computer. If false, all gestures will be skipped.
        """
        self.action_runner = ActionRunner(sic)
        self.user_model = {"name": "", "age": -1}
        self.recognition_manager = {
            'attempt_success': False, 'attempt_number': 0, 'max_attempts': 2, 'intent_result': -1}
        self.robot_present = robot_present
        self.current_choice = ""
        self.stop = False
        self.speech_speed = speech_speed

    def introduce(self, debug : bool = False) -> None:
        """
        Introduce the robot, set language, prepare robot and greet/welcome human.
        """
        self.action_runner.load_waiting_action('set_language', 'en-US')
        if self.robot_present:
            self.action_runner.load_waiting_action('wake_up')
        self.action_runner.run_loaded_actions()
        if (not debug):
            self.action_runner.run_waiting_action('say_animated', "\\rspd=" + str(self.speech_speed) + "\\" + 'Hello! I am Nao.')
            self.ask_question(question="\\rspd=" + str(self.speech_speed) + "\\" + "What is your name?", intent="answer_name")
            self.ask_question(question="\\rspd=" + str(self.speech_speed) + "\\" + "Nice to meet you " + str(self.user_model["name"]) + ", how old are you?", intent="answer_age")

    def end_conversation(self) -> None:
        """
        End the conversation. Say bye and put the robot in rest mode.
        :return:
        """
        self.action_runner.run_waiting_action(
            'say_animated', 'It was nice talking to you! Bye bye!')
        if self.robot_present:
            self.action_runner.run_waiting_action('rest')

    def request_highfive(self, text):
        self.action_runner.run_waiting_action('go_to_posture', RobotPosture.STAND)
        self.action_runner.load_waiting_action('say_animated', "\\rspd=" + str(self.speech_speed) + "\\" + text)
        if self.robot_present:
            self.current_choice = 0
            self.action_runner.load_waiting_action('play_motion', Motion().backhand_left)
        else:
            self.current_choice = 1
    
        self.action_runner.run_loaded_actions()

    def detect_highfive(self):
        self.current_choice = 1
        if self.robot_present:
            self.action_runner.load_waiting_action('go_to_posture', RobotPosture.STAND)

    def detect_stop(self):
        self.stop = True


    def request_choice(self, question: str = None, gesture = None):
        self.action_runner.run_waiting_action('go_to_posture', RobotPosture.STAND)
        self.action_runner.load_waiting_action('say_animated', "\\rspd=" + str(self.speech_speed) + "\\" + question)
        # if (self.robot_present and gesture is not None):
        #     self.action_runner.load_waiting_action('do_gesture', gesture)
        # self.action_runner.run_loaded_actions()

        # lift arm to provide possibility to give fistbump/handshake
        
        if self.robot_present:
            # self.action_runner.load_waiting_action('go_to_posture', RobotPosture.STANDZERO, 50)
            self.action_runner.load_waiting_action('play_motion', Motion().right_left)


        # wait for fist to be grapped
        self.action_runner.run_loaded_actions()

    def set_current_choice(self, option: int):
        self.current_choice = option
        if self.robot_present:
            self.action_runner.load_waiting_action('go_to_posture', RobotPosture.STAND)

    def ask_question(self, question: str = None, intent: str = None, gesture = None, expected_answer: str = None) -> ReturnType:
        """
        Ask a question to the human and wait for an answer. Specified Dialogflow intent will be used to determine answer.
        :param question: Question to be asked to the human via speech (str)
        :param intent: Intent to be used by Dialogflow to recognise the given answer (str)
        :param gesture: Gesture to be made while the question is being asked (str)
        :return: Indicator whether the answer recognition failed, succeeded or was stopped by the human.
        """
        while not self.recognition_manager['attempt_success'] and self.recognition_manager['attempt_number'] < self.recognition_manager['max_attempts']:
            # ask question
            self.action_runner.load_waiting_action('say_animated', "\\rspd=" + str(self.speech_speed) + "\\" + question)
            if (self.robot_present and gesture is not None):
                self.action_runner.load_waiting_action('do_gesture', gesture)
            self.action_runner.run_loaded_actions()
            # wait for speech with dialogflow intent
            self.action_runner.run_waiting_action(
                'speech_recognition', intent, 0, additional_callback=self.on_intent)
            if self.recognition_manager['intent_result'] == 0:
                self.reset_recognition_management()
                return ReturnType.STOP

        if self.recognition_manager['attempt_number'] == self.recognition_manager['max_attempts']:
            self.reset_recognition_management()
            return ReturnType.MAX_ATTEMPTS

        if expected_answer is not None and expected_answer in self.recognition_manager['intent_result']:
            self.reset_recognition_management()
            return ReturnType.SUCCESS

        elif expected_answer is None and self.recognition_manager['intent_result'] == 1:
            self.reset_recognition_management()
            return ReturnType.SUCCESS

        return ReturnType.WRONG_ANSWER

    def tell_story_part(self, text: str, movement: str = None, movement_type: MOVEMENT_TYPE = None, soundfile: str = None) -> None:
        """
        Tell storypart to the human
        :param text: Text of the storypart to be told via speech (str)
        :param movement: movement to be made while the storypart is being told (str)
        :return:
        """
        if text is not None and len(text) > 0:
            self.action_runner.load_waiting_action('say_animated' if (movement is None) else 'say' , "\\rspd=" + str(self.speech_speed) + "\\" + text)

        if (self.robot_present and movement is not None):
            if movement_type == MOVEMENT_TYPE.POSTURE:
                self.action_runner.load_waiting_action('go_to_posture', movement)
            elif movement_type == MOVEMENT_TYPE.MOTION:
                self.action_runner.load_waiting_action('play_motion', movement)
            elif movement_type == MOVEMENT_TYPE.GESTURE:
                self.action_runner.load_waiting_action('do_gesture', movement)
                
        if self.robot_present and soundfile is not None:
            self.action_runner.load_waiting_action('play_audio', soundfile)

        self.action_runner.run_loaded_actions()

    # def tell_joke(self) -> None:  # , gesture: Gesture = None) -> None:
    #     """
    #     Tell a joke to the child
    #     """
    #     self.action_runner.load_waiting_action('play_motion', Gesture.knock_knock)
    #     self.action_runner.load_waiting_action('say', 'Knock Knock')
    #     self.action_runner.run_loaded_actions()
    #     self.action_runner.load_waiting_action('say', 'Figs')
    #     self.action_runner.run_loaded_actions()
    #     sleep(2)  # wait for the child to anwser
    #     self.action_runner.load_waiting_action('say', 'Figs your doorbell, it is broken!')
    #     self.action_runner.load_waiting_action('do_gesture', 'animations/Stand/Gestures/Explain_1')
    #     self.action_runner.run_loaded_actions()
    #     self.action_runner.load_waiting_action('say', 'Ha ha ha ha ha ha ha ha')
    #     self.action_runner.load_waiting_action('do_gesture', 'animations/Stand/Emotions/Positive/Happy_4')
    #     self.action_runner.run_loaded_actions()

    def get_joke(self):
        with open('Jokes.txt', "r",encoding='utf-8') as jokefile:
            all_jokes = jokefile.readlines()
            found_joke = False
            full_joke = []
            for attempt in range(0, 5):  # Make sure joke number exists
                selected_joke = str(random.randint(0, 267))  # Amount of jokes
                for line in all_jokes:
                    if selected_joke in line:
                        question = (line.split('. ')[1]).rstrip()  # Capture joke and remove other characters
                        full_joke.append(question)  # Add joke to list
                        found_joke = True
                    if found_joke:
                        if line == '\n':
                            return full_joke  # Empty line indicates joke end
                            break
                        elif not line.strip():
                            return full_joke
                            break
                        if question not in line:
                            full_joke.append(line.rstrip())  # Add lines after question
                if found_joke:
                    break

    def on_intent(self, detection_result: DetectionResult = None) -> None:
        """
        Callback function executed after a Dialogflow intent determining how to react on a given answer by the human.
        :param detection_result: Contains all information provided by Dialogflow needed to decide how to react (DetectionResult)
        :return:
        """
        if detection_result and len(detection_result.parameters) > 0:

            if detection_result.intent == 'answer_name':
                self.user_model['name'] = detection_result.parameters['name'].struct_value['name']
                self.recognition_manager['attempt_success'] = True
                self.recognition_manager['intent_result'] = 1

            elif detection_result.intent == 'answer_age':
                self.user_model['age'] = detection_result.parameters['age'].struct_value['amount']
                self.recognition_manager['attempt_success'] = True
                self.recognition_manager['intent_result'] = 1

            elif detection_result.intent == 'answer_decision':
                self.user_model['decision'] = detection_result.parameters['decision'].string_value
                self.recognition_manager['attempt_success'] = True
                self.recognition_manager['intent_result'] = 1

            elif detection_result.intent == 'answer_math_question':
                # print(detection_result)
                self.recognition_manager['attempt_success'] = True
                self.recognition_manager['intent_result'] = str(int(detection_result.parameters['number'].number_value))

            elif detection_result.intent == 'answer_color_question':
                print(detection_result)
                self.recognition_manager['attempt_success'] = True
                self.recognition_manager['intent_result'] = str(detection_result.parameters['colour'].string_value)

            elif detection_result.intent == 'answer_roof_question':
                print(detection_result)
                self.recognition_manager['attempt_success'] = True
                self.recognition_manager['intent_result'] = str(detection_result.parameters['tool'].string_value)
            
            elif detection_result.intent == 'joke_story_decision':
                self.recognition_manager['attempt_success'] = True
                self.recognition_manager['intent_result'] = 1
                self.current_choice = detection_result.parameters["path"].string_value

            elif detection_result.intent == "stop":
                # self.end_conversation()
                self.recognition_manager['intent_result'] = 0
                self.stop = True

            else:
                self.recognition_manager['attempt_number'] += 1

        else:
            self.recognition_manager['attempt_number'] += 1

    def reset_recognition_management(self) -> None:
        """
        Reset the recognition management.
        :return:
        """
        self.recognition_manager.update(
            {'attempt_success': False, 'attempt_number': 0, 'intent_result': -1})
